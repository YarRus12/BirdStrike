version: '1'
x-airflow-common:
  &airflow-common
  platform: linux/amd64
  image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.0.1}
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'true'
  volumes:
    - ./dags/:/opt/airflow/dags
    - ./logs/:/opt/airflow/logs
    - ./plugins/:/opt/airflow/plugins
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"
  depends_on:
    birdstrike_database:
      condition: service_healthy


services:
  postgres:
    container_name: birdstrike_database
    build:
      dockerfile: Database/Dockerfile
    ports:
      - 6432:5432  # возможно первый порт придется заменить, если он уже занят хххх:5432
    environment:
      POSTGRES_DB: docker_app_db
      POSTGRES_USER: docker_app
      POSTGRES_PASSWORD: docker_app
    env_file:
      - .env
#    volumes:
#      - postgres-db-volume:/var/lib/postgresql/data
    networks:
      - bird_strike_common
    restart: always
    healthcheck:
      test: [ "CMD -SHELL", "pg_isready", "-U", "docker_app" ]
      interval: 5s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 1

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - 8080:8080
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always

  airflow-worker:
    <<: *airflow-common
    command: celery worker
    restart: always

  airflow-init:
    <<: *airflow-common
    command: version
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}

  flower:
    <<: *airflow-common
    command: celery flower
    ports:
      - 5555:5555
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:5555/" ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always


networks:
  bird_strike_common:
    name: bird_strike_common



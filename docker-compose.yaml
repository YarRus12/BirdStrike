version: '1'
x-airflow-common:
  &airflow-common
  image: apache/airflow:2.0.0
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:postgres@postgres:5432/airflow
    - AIRFLOW__CORE__FERNET_KEY=FB0o_zt4e3Ziq3LdUUO7F2Z95cvFFx16hU8jTeR1ASM=
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
    - AIRFLOW__CORE__LOGGING_LEVEL=INFO
  volumes:
    - ./dags:/opt/airflow/dags
    - ./airflow-data/logs:/opt/airflow/logs
    - ./airflow-data/plugins:/opt/airflow/plugins
    - ./airflow-data/airflow.cfg:/opt/airlfow/airflow.cfg
  depends_on:
    - postgres

services:
  postgres:
    container_name: birdstrike_database
    build:
      dockerfile: Database/Dockerfile
    ports:
      - 6432:5432  # возможно первый порт придется заменить, если он уже занят хххх:5432
    environment:
      POSTGRES_DB: docker_app_db
      POSTGRES_USER: docker_app
      POSTGRES_PASSWORD: docker_app
    env_file:
      - .env
#    volumes:
#      - postgres-db-volume:/var/lib/postgresql/data
    networks:
      - bird_strike_common
    restart: always
    healthcheck:
      test: [ "CMD -SHELL", "pg_isready", "-U", "docker_app" ]
      interval: 5s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 1

  airflow-init:
    <<: *airflow-common
    container_name: airflow_init
    entrypoint: /bin/bash
    command:
      - -c
      - airflow users list || ( airflow db init &&
        airflow users create
        --role Admin
        --username airflow
        --password airflow
        --email airflow@airflow.com
        --firstname airflow
        --lastname airflow )
    restart: on-failure

  airflow-webserver:
    <<: *airflow-common
    command: airflow webserver
    ports:
      - 8080:8080
    container_name: airflow_webserver
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: airflow scheduler
    container_name: airflow_scheduler
    restart: always

networks:
  bird_strike_common:
    name: bird_strike_common
